local player = game.Players.LocalPlayer
local char = workspace:FindFirstChild(player.Name)
if not char then return end
local humanoid = char:FindFirstChild("Humanoid")
local properties = char:FindFirstChild("Properties")
if not humanoid then return end
if not properties then return end

local noclip = char:FindFirstChild("CollisionBox")
if noclip then
    noclip.CanCollide = _G.CanCollide or false
end

local head = char:FindFirstChild("Head")
if head then
    head.CustomPhysicalProperties = PhysicalProperties.new(0.0001, 0.300000012, 0.5, 1, 1)
end

local aglinshit = char:FindFirstChild("AlignPosition")
if aglinshit then
    aglinshit.Responsiveness = 40
end

local alligno = char:FindFirstChild("AlignOrientation")
if alligno then
    alligno.Responsiveness = 40
end

local on = true
local multipliers = {
    Acceleration = _G.Acceleration or 1,
    BoxoutSpeed = _G.BoxoutSpeed or 1,
    GuardSpeed = _G.GuardSpeed or 1,
    NormalSpeed = _G.NormalSpeed or 1,
    PostSpeed = _G.PostSpeed or 1,
    ScreenSpeed = _G.ScreenSpeed or 1,
    WalkDivider = _G.WalkDivider or 1,
    WithBallSpeed = _G.WithBallSpeed or 1,
}

local values = {}
for attribute, multiplier in pairs(multipliers) do
    local value = humanoid:GetAttribute(attribute)
    if value then
        values[attribute] = value
    end
end

local r = game:GetService("RunService")
local function dothething()
    r.Heartbeat:Connect(function()
        if not on then return end

        local sprinting = properties:GetAttribute("Sprinting") == true
        local stun = properties:GetAttribute("CanPickUp") == false

        for attribute, multiplier in pairs(multipliers) do
            local original = values[attribute]
            if original then
                local new = original * multiplier
                if sprinting then
                    new = new + 0.9
                end
                if stun then
                    new = new - 5
                end
                humanoid:SetAttribute(attribute, new)
            end
        end
    end)
end

local function comeback()
    for attribute, original in pairs(values) do
        humanoid:SetAttribute(attribute, original)
    end
end

local UserInputService = game:GetService("UserInputService")
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed then return end
    if input.KeyCode == Enum.KeyCode.End or input.KeyCode == Enum.KeyCode.DPadUp then
        on = false
        comeback()
        script:Destroy()
    end
end)

task.spawn(dothething)
