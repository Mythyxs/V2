if game.PlaceId ~= 17043277158 then
    return
end

-- Create template part
local function createGoalPart(position)
    local part = Instance.new("Part")
    part.CFrame = position
    part.Size = Vector3.new(2, 2, 1.5)
    part.Shape = Enum.PartType.Ball
    part.Anchored = true
    part.Parent = nil
    part.Transparency = 0
    return part
end

-- Create all goals with their positions
local redleft = createGoalPart(CFrame.new(-17520.4824, 807.393555, 221.899963, -1, -8.63220121e-05, 0, -8.63220121e-05, 1, 0, -0, 0, -1))
local redright = createGoalPart(CFrame.new(-17520.4824, 807.393555, 260.7, -1, -8.63220121e-05, 0, -8.63220121e-05, 1, 0, -0, 0, -1))
local blueleft = createGoalPart(CFrame.new(-18520.4824, 807.393555, 221.899963, -1, -8.63220121e-05, 0, -8.63220121e-05, 1, 0, -0, 0, -1))
local blueright = createGoalPart(CFrame.new(-18520.4824, 807.393555, 260.7, -1, -8.63220121e-05, 0, -8.63220121e-05, 1, 0, -0, 0, -1))

-- Set team colors
redleft.Color = Color3.fromRGB(255, 0, 0)
redright.Color = Color3.fromRGB(255, 0, 0)
blueleft.Color = Color3.fromRGB(0, 0, 255)
blueright.Color = Color3.fromRGB(0, 0, 255)

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local connection
local aimConnection
local teamCheckConnection
local isScriptActive = true

local function updateGoalVisibility()
    if not isScriptActive then return end
    
    if LocalPlayer.Team then
        if LocalPlayer.Team.Name == "Red" then
            -- If on Red team, show Blue goals and hide Red goals
            redleft.Parent = nil
            redright.Parent = nil
            blueleft.Parent = workspace
            blueright.Parent = workspace
        elseif LocalPlayer.Team.Name == "Blue" then
            -- If on Blue team, show Red goals and hide Blue goals
            blueleft.Parent = nil
            blueright.Parent = nil
            redleft.Parent = workspace
            redright.Parent = workspace
        end
    end
end

local function getClosestPart()
    local mousePos = Vector2.new(Mouse.X, Mouse.Y)
    local closestPart = nil
    local closestDistance = math.huge
    
    -- Only check parts that are currently parented to workspace
    local targets = {}
    if redleft.Parent then table.insert(targets, redleft) end
    if redright.Parent then table.insert(targets, redright) end
    if blueleft.Parent then table.insert(targets, blueleft) end
    if blueright.Parent then table.insert(targets, blueright) end
    
    for _, target in pairs(targets) do
        if target and target.Parent then
            local vector, onScreen = Camera:WorldToScreenPoint(target.Position)
            if onScreen then
                local distance = (mousePos - Vector2.new(vector.X, vector.Y)).Magnitude
                if distance < closestDistance then
                    closestDistance = distance
                    closestPart = target
                end
            end
        end
    end
    
    return closestPart
end

local function cleanupScript()
    isScriptActive = false
    
    -- Remove all goals from workspace first
    redleft.Parent = nil
    redright.Parent = nil
    blueleft.Parent = nil
    blueright.Parent = nil
    
    -- Disconnect all connections
    if connection then
        connection:Disconnect()
    end
    if aimConnection then
        aimConnection:Disconnect()
    end
    if teamCheckConnection then
        teamCheckConnection:Disconnect()
    end
    
    -- Destroy the parts
    if redleft then redleft:Destroy() end
    if redright then redright:Destroy() end
    if blueleft then blueleft:Destroy() end
    if blueright then blueright:Destroy() end
end

connection = UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.End then
        cleanupScript()
    end
end)

local isAiming = false
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.MouseButton3 then
        isAiming = true
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if input.UserInputType == Enum.UserInputType.MouseButton3 then
        isAiming = false
    end
end)

aimConnection = RunService.RenderStepped:Connect(function()
    if isAiming and isScriptActive then
        local target = getClosestPart()
        if target then
            local targetPos = target.Position
            Camera.CFrame = CFrame.new(Camera.CFrame.Position, targetPos)
        end
    end
end)

-- Check team every second and update goal visibility
teamCheckConnection = RunService.Heartbeat:Connect(function()
    wait(1)
    updateGoalVisibility()
end)

-- Initial check
updateGoalVisibility()
